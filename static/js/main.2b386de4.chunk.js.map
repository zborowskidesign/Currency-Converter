{"version":3,"sources":["pages/Home.js","components/ValueInput.js","components/Converter.js","pages/Przelicznik.js","pages/Kontakt.js","layout-elements/Page.js","layout-elements/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","ValueInput","props","Options","chooseCurrency","ChangeCurrency","onChangeAmount","amount","type","min","value","onChange","map","option","key","url","Converter","toAmount","fromAmount","useState","setOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setEchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","fetch","then","response","json","data","FirstOptionCurrency","Object","keys","rates","base","React","localStorage","getItem","JSON","parse","setItem","stringify","Date","now","e","target","Przelicznik","Kontakt","state","name","handleSend","length","alert","TextChange","setState","ResetMessageValue","onSubmit","this","action","method","enctype","id","placeholder","size","onClick","when","message","Component","Page","path","exact","component","Navigation","to","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.2b386de4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n      <>\r\n     \r\n      <h1 className=\"about-application-main\"><strong>Przelicznik</strong> walut </h1>\r\n      <div className=\"text-box\">\r\n  <p className=\"about-application-body\">Drogi użytkowniku!<br/><br/> Aplikacja ma przede wszystkim zapewnić gwarancję dostępu do bieżącego kursu walutowego z <strong>trzydziestu trzech państw</strong>, jednocześnie umożliwiając swobodną obsługę programu</p>\r\n  </div>\r\n</>\r\n      );\r\n}\r\n \r\nexport default Home;","import React from 'react'\r\n\r\nexport default function ValueInput(props) {\r\n    const {\r\n        Options,\r\n        chooseCurrency,\r\n        ChangeCurrency,\r\n        onChangeAmount,\r\n        amount\r\n    } = props\r\n    return (\r\n        <div>\r\n            <input type=\"number\" min=\"0\" className=\"MoneyInput\" value={amount} onChange={onChangeAmount}/>\r\n            <select value={chooseCurrency} onChange={ChangeCurrency}>\r\n                {Options.map(option => (\r\n                    <option key={option} value={option}>{option}</option>\r\n                ))}\r\n            \r\n            </select>\r\n        </div>\r\n    )\r\n}","import React, {useEffect,useState} from 'react';\r\nimport ValueInput from './ValueInput';\r\nimport '../App.scss';\r\n\r\nconst url = `https://api.exchangeratesapi.io/latest?` \r\n\r\n\r\n\r\nconst Converter = () => {\r\n\r\n\r\n  const [Options,setOptions] = useState([])\r\n  const [fromCurrency, setFromCurrency] = useState()\r\n  const [toCurrency, setToCurrency] = useState()\r\n  const [exchangeRate, setEchangeRate] = useState()\r\n  const [amount,setAmount] = useState(1)\r\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\r\n\r\n\r\n\r\n  let toAmount, fromAmount\r\n\r\n  if(amountInFromCurrency)\r\n  {\r\n    fromAmount = amount\r\n    toAmount = amount * exchangeRate\r\n  }\r\n  else{\r\n    toAmount = amount\r\n    fromAmount = amount / exchangeRate\r\n  }\r\n  useEffect(() =>\r\n  {\r\n    fetch(url)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      const FirstOptionCurrency = Object.keys(data.rates)[0]\r\n      setOptions([data.base, ...Object.keys(data.rates)])\r\n      setFromCurrency(data.base)\r\n      setToCurrency(FirstOptionCurrency)\r\n      setEchangeRate(data.rates[FirstOptionCurrency])\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => \r\n  {\r\n    if(fromCurrency != null && toCurrency != null)\r\n    {\r\n      fetch(`${url}&base=${fromCurrency}&symbols=${toCurrency}`)\r\n      .then(response => response.json())\r\n      .then(data => setEchangeRate(data.rates[toCurrency]))\r\n      \r\n    }\r\n  },[fromCurrency, toCurrency])\r\n\r\n  function handleFromAmountChange(e)\r\n  {\r\n    if(e.target.value >= 0)\r\n    {\r\n      setAmount(e.target.value)\r\n      setAmountInFromCurrency(true)\r\n    }\r\n    \r\n  }\r\n\r\n  function handleToAmountChange(e)\r\n  {\r\n    if(e.target.value >= 0)\r\n    {\r\n      setAmount(e.target.value)\r\n      setAmountInFromCurrency(false)\r\n    }\r\n  }\r\n\r\n    React.useEffect(() => \r\n    {\r\n      const data = localStorage.getItem(\"value-story\");\r\n      if(data)\r\n      {\r\n        setAmount(JSON.parse(data));\r\n        \r\n      }\r\n    }, [])\r\n\r\n  \r\n\r\n\r\n    React.useEffect(() => \r\n    {\r\n\r\n      localStorage.setItem(\"value-story\", JSON.stringify(fromAmount))\r\n      localStorage.setItem(\"value-story-converted\", JSON.stringify(toAmount))\r\n      localStorage.setItem(\"value-storyDate\", Date.now())\r\n      localStorage.setItem(\"selectUp\", JSON.stringify(fromCurrency))\r\n      localStorage.setItem(\"selectDown\", JSON.stringify(toCurrency))\r\n\r\n    })\r\n\r\n    \r\n\r\n  return (\r\n    \r\n    <>\r\n    <h1><strong>Przelicznik</strong> walut</h1>\r\n    <ValueInput \r\n    Options = {Options}\r\n    chooseCurrency= {fromCurrency}\r\n    ChangeCurrency = {e => setFromCurrency(e.target.value)}\r\n    onChangeAmount = {handleFromAmountChange}\r\n    amount={fromAmount}\r\n    />\r\n    <ValueInput \r\n    Options = {Options}\r\n    chooseCurrency= {toCurrency}\r\n    ChangeCurrency = {e => setToCurrency(e.target.value)}\r\n    onChangeAmount = {handleToAmountChange}\r\n    amount={toAmount}\r\n    />\r\n    </>\r\n    \r\n  );\r\n}\r\n\r\n\r\n \r\nexport default Converter;","import React from 'react';\r\nimport Converter from '../components/Converter';\r\n\r\nconst Przelicznik = () => {\r\n    return (  \r\n        <>\r\n\r\n        <Converter/>\r\n        \r\n        </>\r\n    );\r\n}\r\n \r\nexport default Przelicznik;","import React from 'react';\r\nimport {Prompt} from 'react-router-dom';\r\n\r\nclass Kontakt extends React.Component {\r\n  state = {  \r\n    value: \"\",\r\n    name: \"\"\r\n  }\r\n\r\n  handleSend = () =>\r\n  {\r\n    if(this.state.value.length < 1)\r\n    {\r\n      alert('Twoja wiadomość jest za krótka')\r\n    }\r\n  }\r\n\r\n  TextChange = (e) =>\r\n  {\r\n    this.setState({\r\n      value: e.target.value\r\n    })\r\n  }\r\n\r\n  ResetMessageValue = () =>\r\n  {\r\n    this.setState({\r\n      value: \"\"\r\n    })\r\n  }\r\n\r\n  render() { \r\n    return ( \r\n      <>\r\n       <h1><strong>Napisz</strong> do mnie</h1>\r\n       <form  onSubmit={this.handleSend} action={this.state.value.length < 1 ? \"\" : \"mailto:michalzborowski@interia.pl\"} method= {this.state.value.length < 1 ? \"\" : \"post\"} enctype=\"text/plain\">\r\n       <input type=\"text\" name=\"Imie: \" id=\"name\" placeholder=\"Imie\"></input>\r\n       <br/>\r\n       <input type=\"text\" name=\"Email: \" id=\"mail\" placeholder=\"Email\"></input>\r\n       <br/>\r\n       <input type=\"text\" value={this.state.value} onChange={this.TextChange} name=\"Komentarz: \" size=\"60\" id=\"message\" placeholder=\"Twoja wiadomość\"></input>\r\n       <br/>\r\n       <input type=\"submit\" value=\"Send\"></input>\r\n       <input type=\"reset\"  value=\"Reset\" onClick={this.ResetMessageValue}></input>\r\n       </form>\r\n       <Prompt\r\n       when={this.state.value.length > 0}\r\n       message=\"Czy na pewno chcesz opuśić podstronę w trakcie wypełniania formularza?\"\r\n       />\r\n       </>\r\n     );\r\n  }\r\n}\r\n \r\n\r\nexport default Kontakt;\r\n \r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport Home from '../pages/Home';\r\nimport Przelicznik from '../pages/Przelicznik';\r\nimport Kontakt from '../pages/Kontakt';\r\n\r\nconst Page = () => {\r\n    return ( \r\n        <>     \r\n        <Route path=\"/\" exact component={Home}/>\r\n        <Route path=\"/przelicznik\" component={Przelicznik}/>\r\n        <Route path=\"/kontakt\" component={Kontakt}/>     \r\n        </>\r\n     );\r\n}\r\n \r\nexport default Page;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n    return ( \r\n        <nav>\r\n            <li>\r\n                <NavLink to= \"/\">O apliakcji</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"przelicznik\">Przelicznik</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"kontakt\">Kontakt</NavLink>\r\n            </li>\r\n        </nav>\r\n\r\n     );\r\n}\r\n \r\nexport default Navigation;","import React, {Component} from 'react';\nimport './App.scss';\nimport{BrowserRouter,Route} from 'react-router-dom';\nimport Page from './layout-elements/Page';\nimport Navigation from './layout-elements/Navigation';\n\n\n\nclass App extends Component {\n  state = {  }\n  render() { \n    return ( \n     <BrowserRouter> \n     <div className=\"App\">\n       <main>\n         <aside>\n           {<Navigation/>}\n         </aside>\n         <section className=\"page-structur\">\n           <Page/>\n         </section>\n       </main>\n     </div>\n     </BrowserRouter>\n     );\n  }\n}\n \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}